
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    vector<int> v;
    v.push_back(1);
    v.push_back(5);
    v.push_back(3);
    v.push_back(7);
    v.push_back(2);
    v.push_back(0);
    v.push_back(8);
    for (auto e : v)
    {
        cout << e << " ";
    }
    cout << endl;
    for (int i = 0; i < v.size(); i++)
    {
        cout << v[i] << " ";
    }
    cout << endl;
    vector<int>::iterator vit = v.begin();
    while (vit != v.end())
    {
        cout << *vit << " ";
        vit++;
    }
    cout << endl;
    vector<int> v1(10, 0);
    for (auto e : v1)
    {
        cout << e << " ";
    }
    cout << endl;
    vector<string> v2(10, "xxx");
    for (auto e : v2)
    {
        cout << e << " ";
    }
    cout << endl;
    string v3 = "hello world";
    vector<char> v4(v3.begin(), v3.end());
    for (auto e : v4)
    {
        cout << e << " ";
    }
    cout << endl;
    int a[] = {23, 15, 87, 20, 77};
    vector<int> v5(a, (a + sizeof(a) / sizeof(a[0])));
    for (auto e : v5)
    {
        cout << e << " ";
    }
    cout << endl;
    cout << "开始升序排序..." << endl;
    sort(v.begin(), v.end());
    for (auto e : v)
    {
        cout << e << " ";
    }
    cout << endl;
    cout << "开始降序排序(1)..." << endl;
    sort(v.rbegin(), v.rend());
    for (auto e : v)
    {
        cout << e << " ";
    }
    cout << endl;
    cout << "开始降序排序(2)..." << endl;
    greater<int> g1;
    for (auto e : v)
    {
        cout << e << " ";
    }
    cout << endl;
    v.erase(v.begin());
    vector<int>::iterator pos = find(v.begin(), v.end(), 3);
    // auto pos = find(v.begin(), v.end(), 3);
    if (pos != v.end())
    {
        v.erase(pos);
    }
    for (auto e : v)
    {
        cout << e << " ";
    }
    cout << endl;

        return 0;
}
